// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Embutidos.Infraestructura.AccesoDatos;

public partial class EmbutidosDBContext : DbContext
{
    public EmbutidosDBContext()
    {
    }

    public EmbutidosDBContext(DbContextOptions<EmbutidosDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Productoo> Productoo { get; set; }

    public virtual DbSet<receta> receta { get; set; }

    public virtual DbSet<tipo_producto> tipo_producto { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=STEPHYR;Initial Catalog=EmbutidosDB;Integrated Security=True; Encrypt = true; TrustServerCertificate = true;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Productoo>(entity =>
        {
            entity.HasKey(e => e.id_producto);

            entity.Property(e => e.descripcion)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.id_tipo_productoNavigation).WithMany(p => p.Productoo)
                .HasForeignKey(d => d.id_tipo_producto)
                .HasConstraintName("FK_Productoo_tipo_producto");
        });

        modelBuilder.Entity<receta>(entity =>
        {
            entity.HasKey(e => e.id_receta);

            entity.Property(e => e.id_receta).ValueGeneratedNever();
            entity.Property(e => e.descripcion)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.id_productoNavigation).WithMany(p => p.receta)
                .HasForeignKey(d => d.id_producto)
                .HasConstraintName("FK_receta_Productoo");
        });

        modelBuilder.Entity<tipo_producto>(entity =>
        {
            entity.HasKey(e => e.id_tipo_producto);

            entity.Property(e => e.id_tipo_producto).ValueGeneratedNever();
            entity.Property(e => e.descripcion)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}